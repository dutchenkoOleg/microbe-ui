@import '../core';

._ {
	$property: $microbe-spacer-size-custom-property-name;
	$container: $microbe-spacer-classname-for-container;

	@mixin generate() {
		@each $space, $value in $microbe-spaces-map {
			&--#{$space} {
				@if ($microbe-ie-fallback == false) {
					#{$property}: #{$value};
				} @else {
					margin-left: microbe-important(#{$value * -1});
					margin-bottom: microbe-important(#{$value * -1});

					> * {
						padding-left: microbe-important($value);
						margin-bottom: microbe-important($value);
					}
				}
			}
		}
	}

	&#{$container} {
		@if ($microbe-ie-fallback == false) {
			#{$property}: auto;
			margin-left: microbe-important(calc(var(#{$property}) * -1));
			margin-bottom: microbe-important(calc(var(#{$property}) * -1));

			> * {
				padding-left: microbe-important(var(#{$property}));
				margin-bottom: microbe-important(var(#{$property}));
			}
		}

		@include generate();
	}

	@each $breakpoint, $size in $microbe-breakpoints-map {
		@include microbe-media($size) {
			&#{$breakpoint + '\\:' + $container} {
				@include generate();
			}
		}
	}
}
