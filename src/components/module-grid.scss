@import '../core';

._module-grid {
	$columns: $microbe-module-grid-columns-count;
	display: flex;
	flex-wrap: wrap;
	list-style: none; // reset ol and ul elements
	padding: 0;
	margin: 0;
	--microbe-cell-width: auto;

	& > * {
		flex-basis: var(--microbe-cell-width);
		width: var(--microbe-cell-width);
		max-width: var(--microbe-cell-width);
	}

	@for $i from 1 through $columns {
		$cell-width: percentage($columns / $i / $columns);
		&--#{$i} {
			& > * {
				--microbe-cell-width: #{$cell-width};
			}
		}
	}

	&--auto {
		& > * {
			--microbe-cell-width: auto;
		}
	}
}

._module-cell {
	$positions: $microbe-module-cell-positions-count;
	box-sizing: border-box;
	list-style: none; // reset li elements

	@for $i from 1 through $positions {
		$cell-width: percentage($i / $positions);
		&--#{$i} {
			--microbe-cell-width: #{$cell-width};
		}
	}

	&--auto {
		--microbe-cell-width: auto;
	}
}

@each $breakpoint, $size in $microbe-breakpoints-map {
	@include microbe-media($size) {
		$columns: $microbe-module-grid-columns-count;
		._#{$breakpoint + '\\:'}module-grid {
			@for $i from 1 through $columns {
				$cell-width: percentage($columns / $i / $columns);
				&--#{$i} {
					& > * {
						--microbe-cell-width: #{$cell-width};
					}
				}
			}

			&--auto {
				& > * {
					--microbe-cell-width: auto;
				}
			}
		}

		$positions: $microbe-module-cell-positions-count;
		._#{$breakpoint + '\\:'}module-cell {
			@for $i from 1 through $positions {
				$cell-width: percentage($i / $positions);
				&--#{$i} {
					--microbe-cell-width: #{$cell-width};
				}
			}

			&--auto {
				--microbe-cell-width: auto;
			}
		}
	}
}
